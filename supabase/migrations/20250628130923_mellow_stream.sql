/*
  # Fix Stripe Tables and ID Generation

  1. Changes
    - Modify stripe_customers, stripe_subscriptions, and stripe_orders tables to use IDENTITY columns
    - Ensure proper ID generation for Stripe-related tables
    - Fix issues with manual ID assignment in edge functions

  2. Security
    - Maintain proper access control for all tables
    - Ensure data integrity with proper ID generation
*/

-- CRITICAL FIX: Modify stripe tables to use IDENTITY columns
-- This ensures that IDs are automatically generated by the database

-- First, check if the tables exist and if they have the IDENTITY property
DO $$ 
DECLARE
    customers_has_identity BOOLEAN;
    subscriptions_has_identity BOOLEAN;
    orders_has_identity BOOLEAN;
BEGIN
    -- Check if stripe_customers.id is an IDENTITY column
    SELECT EXISTS (
        SELECT 1 FROM pg_attribute a
        JOIN pg_class c ON a.attrelid = c.oid
        JOIN pg_namespace n ON c.relnamespace = n.oid
        WHERE n.nspname = 'public'
        AND c.relname = 'stripe_customers'
        AND a.attname = 'id'
        AND a.attidentity = 'a'
    ) INTO customers_has_identity;

    -- Check if stripe_subscriptions.id is an IDENTITY column
    SELECT EXISTS (
        SELECT 1 FROM pg_attribute a
        JOIN pg_class c ON a.attrelid = c.oid
        JOIN pg_namespace n ON c.relnamespace = n.oid
        WHERE n.nspname = 'public'
        AND c.relname = 'stripe_subscriptions'
        AND a.attname = 'id'
        AND a.attidentity = 'a'
    ) INTO subscriptions_has_identity;

    -- Check if stripe_orders.id is an IDENTITY column
    SELECT EXISTS (
        SELECT 1 FROM pg_attribute a
        JOIN pg_class c ON a.attrelid = c.oid
        JOIN pg_namespace n ON c.relnamespace = n.oid
        WHERE n.nspname = 'public'
        AND c.relname = 'stripe_orders'
        AND a.attname = 'id'
        AND a.attidentity = 'a'
    ) INTO orders_has_identity;

    -- If stripe_customers.id is not an IDENTITY column, modify it
    IF NOT customers_has_identity THEN
        -- First, create a temporary sequence if it doesn't exist
        EXECUTE 'CREATE SEQUENCE IF NOT EXISTS stripe_customers_id_seq';
        
        -- Set the column to use the sequence as default
        EXECUTE 'ALTER TABLE stripe_customers ALTER COLUMN id SET DEFAULT nextval(''stripe_customers_id_seq'')';
        
        -- Make it an IDENTITY column
        EXECUTE 'ALTER TABLE stripe_customers ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
    END IF;

    -- If stripe_subscriptions.id is not an IDENTITY column, modify it
    IF NOT subscriptions_has_identity THEN
        -- First, create a temporary sequence if it doesn't exist
        EXECUTE 'CREATE SEQUENCE IF NOT EXISTS stripe_subscriptions_id_seq';
        
        -- Set the column to use the sequence as default
        EXECUTE 'ALTER TABLE stripe_subscriptions ALTER COLUMN id SET DEFAULT nextval(''stripe_subscriptions_id_seq'')';
        
        -- Make it an IDENTITY column
        EXECUTE 'ALTER TABLE stripe_subscriptions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
    END IF;

    -- If stripe_orders.id is not an IDENTITY column, modify it
    IF NOT orders_has_identity THEN
        -- First, create a temporary sequence if it doesn't exist
        EXECUTE 'CREATE SEQUENCE IF NOT EXISTS stripe_orders_id_seq';
        
        -- Set the column to use the sequence as default
        EXECUTE 'ALTER TABLE stripe_orders ALTER COLUMN id SET DEFAULT nextval(''stripe_orders_id_seq'')';
        
        -- Make it an IDENTITY column
        EXECUTE 'ALTER TABLE stripe_orders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
    END IF;
END $$;

-- Log the changes
DO $$
BEGIN
    RAISE NOTICE 'Stripe tables updated to use IDENTITY columns for automatic ID generation';
END $$;